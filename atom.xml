<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Chillax's blog]]></title>
  <subtitle><![CDATA[Goals determine what you are going to be]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-04-11T12:14:10.391Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[huangjunhui]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[hexo搭建博客的实用功能(上)(基于hexo3.0)]]></title>
    <link href="http://yoursite.com/2015/04/09/hexo-guide-2/"/>
    <id>http://yoursite.com/2015/04/09/hexo-guide-2/</id>
    <published>2015-04-09T15:57:37.000Z</published>
    <updated>2015-04-11T12:14:10.391Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在上一节中，我们已经学会了使用hexo搭建博客，并且可以使用hexo发布博文。在这一节中，将介绍一些实用的功能，有了这些功能，博客系统看起来会更好用、好看和充实。<br><a id="more"></a></p>
<h3 id="使用工具来写文章">使用工具来写文章</h3><p>如果您还在使用记事本，或者是notepad++来写您的博客文章，那么我强烈建议您使用<a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad</a>，界面图如下，您可以边写边看到效果。不过这个效果对于有些命令并不管用，但这不影响MarkdownPad成为一款出色的Markdown编辑软件。<br><img src="http://markdownpad.com/img/markdownpad2.png" alt=""></p>
<h3 id="添加“多说”评论">添加“多说”评论</h3><p>正如你们看到的，我的每篇文章最下面都有一个用于评论的功能，如果要自己搞一个评论系统，估计得费不少功夫，但是多说已经帮我们实现了这个功能，我们只需要拿来用即可。步骤如下：<br>1、进入<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>，注册一个帐号，然后点击安装创建一个站点，获得通用代码(建议使用稳定版)。<br>2、两种情况。<br>第一种情况：如果您是使用的是<code>light</code>主题和基于lightum改善的主题，或者说您的<code>E:\hexo\themes\lightum\layout\_partial</code>文件夹下有comment.ejs，则将<code>E:\hexo\themes\lightum\layout\_partial\comment.ejs</code>的代码改成如下代码，其中short_name记得改成您自己的，在通用代码里可以看得到您的short_name。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> ( page.comments)&#123; %&gt;</span><br><span class="line"></span><br><span class="line"> &lt;nav id=<span class="string">"pagination"</span> &gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (page.prev) &#123; %&gt;</span><br><span class="line">    &lt;a href=<span class="string">"&lt;%- config.root %&gt;&lt;%- page.prev.path %&gt;"</span> class=<span class="string">"alignleft prev"</span> &gt;&lt;%= __(<span class="string">'prev'</span>) %&gt;&lt;/a&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (page.next) &#123; %&gt;</span><br><span class="line">    &lt;a href=<span class="string">"&lt;%- config.root %&gt;&lt;%- page.next.path %&gt;"</span> class=<span class="string">"alignright next"</span> &gt;&lt;%= __(<span class="string">'next'</span>) %&gt;&lt;/a&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;div class=<span class="string">"clearfix"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;section id=<span class="string">"comment"</span>&gt;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	&lt;!-- 多说评论框 start --&gt;</span><br><span class="line">	&lt;div class=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"&lt;%= page.path %&gt;"</span> data-title=<span class="string">"&lt;%= page.title %&gt;"</span> data-url=<span class="string">"&lt;%= page.permalink %&gt;"</span>&gt;&lt;/div&gt;</span><br><span class="line">	&lt;!-- 多说评论框 end --&gt;</span><br><span class="line">	&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span><br><span class="line">	&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">	var duoshuoQuery = &#123;short_name:<span class="string">"chillax"</span>&#125;;</span><br><span class="line">	(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">		var ds = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">		ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">		ds.src = (document.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">		ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">		(document.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </span><br><span class="line">		 || document.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">	&#125;)();</span><br><span class="line">	&lt;/script&gt;</span><br><span class="line">	&lt;!-- 多说公共JS代码 end --&gt;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>第二种情况：如果您的<code>E:\hexo\themes\lightum\layout\_partial</code>文件下没有comment.ejs，则首先在<code>E:\hexo\themes\landscape\_config.yml</code>中添加多说的配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">duoshuo_shortname: 你站点的short_name</span><br></pre></td></tr></table></figure></p>
<p>然后修改<code>E:\hexo\themes\landscape\layout\_partial\article.ejs</code>模板，修改如下。<br>把(在article.ejs文件的底部)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"disqus_thread"</span>&gt;</span><br><span class="line">      &lt;noscript&gt;Please <span class="built_in">enable</span> JavaScript to view the &lt;a href=<span class="string">"//disqus.com/?ref_noscript"</span>&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; config.duoshuo_shortname)&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;!-- 多说评论框 start --&gt;</span><br><span class="line">    &lt;div class=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;"</span> data-title=<span class="string">"&lt;%= post.title %&gt;"</span> data-url=<span class="string">"&lt;%= page.permalink %&gt;"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- 多说评论框 end --&gt;</span><br><span class="line">    &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    var duoshuoQuery = &#123;short_name:<span class="string">'&lt;%= config.duoshuo_shortname %&gt;'</span>&#125;;</span><br><span class="line">      (<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        var ds = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">        ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">        ds.src = (document.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">        ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">        (document.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </span><br><span class="line">         || document.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">      &#125;)();</span><br><span class="line">      &lt;/script&gt;</span><br><span class="line">    &lt;!-- 多说公共JS代码 end --&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>此处short_name不需要更改。</p>
<h3 id="添加百度分享">添加百度分享</h3><p>打开<code>E:\hexo\themes\lightum\layout\_partial\article.ejs</code>,找到<code>&lt;%- partial(&#39;post/tag&#39;) %&gt;</code>,然后看<code>&lt;%- partial(&#39;post/tag&#39;) %&gt;</code>下面有没有一行代码为<code>&lt;%-partial(&#39;post/share&#39;)%&gt;</code>,如果有则删除。然后在<code>&lt;%- partial(&#39;post/tag&#39;) %&gt;</code>下方添加如下代码,或者您也可以选择自己去<a href="http://share.baidu.com/code" target="_blank" rel="external">百度分享</a>获取代码。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Baidu Button BEGIN --&gt;</span><br><span class="line">&lt;div id=<span class="string">"bdshare"</span> class=<span class="string">"bdshare_t bds_tools_32 get-codes-bdshare"</span>&gt;</span><br><span class="line">&lt;a class=<span class="string">"bds_qzone"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class=<span class="string">"bds_tsina"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class=<span class="string">"bds_tqq"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class=<span class="string">"bds_renren"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class=<span class="string">"bds_t163"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;span class=<span class="string">"bds_more"</span>&gt;&lt;/span&gt;</span><br><span class="line">&lt;a class=<span class="string">"shareCount"</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> id=<span class="string">"bdshare_js"</span> data=<span class="string">"type=tools&amp;amp;uid=3326447"</span> &gt;&lt;/script&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> id=<span class="string">"bdshell_js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">document.getElementById(<span class="string">"bdshell_js"</span>).src = <span class="string">"http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion="</span> + Math.ceil(new Date()/<span class="number">3600000</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!-- Baidu Button END --&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="添加小图标">添加小图标</h3><p>本博客为海贼王图标。打开<code>E:\hexo\themes\lightum\layout\_partial\head.ejs</code>，搜索<code>&lt;link href=&quot;&lt;%- config.root %&gt;favicon.png&quot; rel=&quot;icon&quot;&gt;</code>，如果找不到，就搜索<code>&lt;link rel=&quot;icon&quot; href=&quot;&lt;%- theme.favicon %&gt;&quot;&gt;</code>，替换为<code>&lt;link href=&quot;&lt;%- config.root %&gt;favicon.ico&quot; rel=&quot;icon&quot; type=&quot;image/x-ico&quot;&gt;</code>，然后将名字为favicon.ico的图标放在<code>E:\hexo\themes\lightum\source</code>目录下。</p>
<h3 id="添加分类、标签云widget">添加分类、标签云widget</h3><p>在<code>E:\hexo\themes\lightum\_config.yml</code>中，添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">- category</span><br><span class="line">- tagcloud</span><br></pre></td></tr></table></figure></p>
<h3 id="添加友情链接和简介widget">添加友情链接和简介widget</h3><p>添加简介<br>1、在<code>E:\hexo\themes\lightum\layout\_widget</code>下新建名为intro.ejs的文件，编辑内容如下(可根据自身情况修改)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"widget tag"</span>&gt;</span><br><span class="line">&lt;h3 class=<span class="string">"title"</span>&gt;简介&lt;/h3&gt;</span><br><span class="line">&lt;ul class=<span class="string">"entry"</span>&gt;</span><br><span class="line">&lt;li&gt;本体：黄俊辉&lt;/li&gt;</span><br><span class="line">&lt;li&gt;外文：chillax | grace&lt;/li&gt;</span><br><span class="line">&lt;li&gt;现状：上海实习ing&lt;/li&gt;</span><br><span class="line">&lt;li&gt;职位：Java开发工程师&lt;/li&gt;</span><br><span class="line">&lt;li&gt;QQ  ：<span class="number">123411739</span>&lt;/li&gt;</span><br><span class="line">&lt;li&gt;邮箱：jhhuang1993@foxmail.com&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>2、在<code>E:\hexo\themes\lightum\_config.yml</code>中，添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">- intro</span><br></pre></td></tr></table></figure></p>
<p>添加友情链接<br>在<code>E:\hexo\themes\lightum\layout\_widget</code>下新建名为blogroll.ejs的文件，编辑内容如下(可根据自身情况修改)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"widget tag"</span>&gt;</span><br><span class="line">&lt;h3 class=<span class="string">"title"</span>&gt;友情链接&lt;/h3&gt;</span><br><span class="line">&lt;ul class=<span class="string">"entry"</span>&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"http://huangjunhui.gitcafe.io/"</span> title=<span class="string">"Chillax's Blog"</span>&gt;Chillax&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>2、在<code>E:\hexo\themes\lightum\_config.yml</code>中，添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">- blogroll</span><br></pre></td></tr></table></figure></p>
<h3 id="添加新浪微博秀widget">添加新浪微博秀widget</h3><p>1、在<a href="http://open.weibo.com/widgets?cat=wb" target="_blank" rel="external">新浪微博开发平台</a>设置自己想要的微博秀样式，并复制生成的代码。<br>2、在<code>E:\hexo\themes\lightum\widget</code>中新建名为<code>weibo.ejs</code>的文件，并将刚才微博秀获得的代码直接保存在该文件下。<br>3、在<code>E:\hexo\themes\lightum\_config.yml</code>中，添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">- weibo</span><br></pre></td></tr></table></figure></p>
<h3 id="添加导航栏中的“关于”">添加导航栏中的“关于”</h3><p>1、在Git Bash下执行命令<code>$ hexo new page &quot;about&quot;</code><br>2、到<code>E:\hexo\source\about</code>下找到index.md，编辑自己想要的内容，格式和发普通文章一样。<br>3、在<code>E:\hexo\themes\lightum\_config.yml</code>中，添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  关于: /about</span><br></pre></td></tr></table></figure></p>
<h2 id="结束语">结束语</h2><p>在下一节中，我们将介绍其他几种实用的功能，欢迎跟随。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>在上一节中，我们已经学会了使用hexo搭建博客，并且可以使用hexo发布博文。在这一节中，将介绍一些实用的功能，有了这些功能，博客系统看起来会更好用、好看和充实。<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo搭建个人博客(基于hexo3.0)]]></title>
    <link href="http://yoursite.com/2015/04/09/hexo-guide/"/>
    <id>http://yoursite.com/2015/04/09/hexo-guide/</id>
    <published>2015-04-09T05:32:09.000Z</published>
    <updated>2015-04-12T01:49:53.016Z</updated>
    <content type="html"><![CDATA[<h2 id="动机">动机</h2><p>前些天，自己刚刚接触hexo，并用hexo搭建了自己的博客，对hexo的强大搭建博客能力感到赞叹。用我的实际体验来说，你只要是有点计算机基础的人，完全可以轻松的使用hexo搭建起自己的博客。你要是用过github、oschina、gitcafe其中的一样，那对你来说，就可以分分钟上手了。其实网上使用hexo搭建博客的教程多的是，我自己也是跟着<a href="http://zipperary.com/" target="_blank" rel="external">zippera</a>的教程搭建的博客，那么我还写这篇博客是出于什么目的呢？原因如下：第一，网上的教程大多比较老了，我在搭建的过程中就遇到过不少问题，因此我觉得有必要写个适配hexo3.0的教程。第二，如你所见，本博客由于刚刚起步，博文少的可怜，因此写这篇博文也可以充场子，免得太冷清。第三，算是自己的个人笔记吧，我本人对于刚学的东西都喜欢用博文记录，免得以后自己忘掉。<br><a id="more"></a></p>
<h2 id="正文">正文</h2><p>首先声明，本教程针对的是windows用户。</p>
<h3 id="安装Git">安装Git</h3><p>下载并安装<a href="http://code.google.com/p/msysgit/" target="_blank" rel="external">msysgit</a>或者是<a href="http://www.xiazaiba.com/html/25984.html" target="_blank" rel="external">msysgit中文版</a>，如果你想了解点Git的基础命令，我推荐以下博文：<a href="http://huangjunhui.gitcafe.io/2015/04/06/my-new-post/" target="_blank" rel="external">Git常用的基础命令</a>，<a href="http://blog.csdn.net/v123411739/article/details/44071059/" target="_blank" rel="external">史上最全github使用方法：github入门到精通</a>,当然即使你不懂Git的命令，跟着本博文走，也完全没问题。</p>
<h3 id="安装Node-js">安装Node.js</h3><p>下载并安装<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>，此处我建议安装完毕后重启电脑，因为我当初安装完没重启，结果后面使用命令安装hexo的时候，提示无效的命令，因此推荐重启。当然，你也可以选择等到后面遇到问题，再选择重启。</p>
<h3 id="安装hexo">安装hexo</h3><p>安装前先介绍几个hexo常用的命令,#后面为注释。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">#完整命令为hexo generate,用于生成静态文件</span></span><br><span class="line">$ hexo s <span class="comment">#完整命令为hexo server,用于启动服务器，主要用来本地预览</span></span><br><span class="line">$ hexo d <span class="comment">#完整命令为hexo deploy,用于将本地文件发布到github上</span></span><br><span class="line">$ hexo n <span class="comment">#完整命令为hexo new,用于新建一篇文章</span></span><br></pre></td></tr></table></figure></p>
<p>鼠标右键任意地方，选择Git Bash，使用以下命令安装hexo(ps：以下命令中的$符号只为了让教程和实际看起来一致，实际输入命令只需输入$ 后面的命令即可)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p>
<p>如果之后在使用的过程中，遇到以下的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found : github</span><br></pre></td></tr></table></figure></p>
<p>则运行以下命令,或者你直接先运行这个命令更好。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p>
<p>接下来创建放置博客文件的文件夹：hexo文件夹。在自己想要的位置创建文件夹，如我hexo文件夹的位置为<code>E:\hexo</code>，名字和地方可以自由选择，当然最好不要放在中文路径下，至于原因，我想很多人懂得。之后进入文件夹，即<code>E:\hexo内</code>，点击鼠标右键，选择Git Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p>
<p>安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p>
<p>让我们看看刚刚下载的hexo文件带来了什么，在<code>E:\hexo</code>内执行以下命令，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p>
<p>然后用浏览器访问<code>http://localhost:4000/</code>，此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。</p>
<h3 id="注册Github帐号">注册Github帐号</h3><p>已经有Github帐号跳过此步，首先进入<a href="https://github.com/" target="_blank" rel="external">Github</a>进行注册，用户名、邮箱和密码之后都需要用到，自己记好。</p>
<h3 id="创建repository">创建repository</h3><p>repository相当于一个仓库，用来放置你的代码文件。首先，登陆进入<a href="https://github.com/" target="_blank" rel="external">Github</a>，并进入个人页面，选择<code>Repositories</code>(下图第一个红圈的地方)，然后<code>New</code>一个repository(下图第二个红圈的地方)<br><img src="http://i2.tietuku.com/1760ff1098ab76fd.png" alt=""><br>创建时，只需要填写Repository name即可，当然这个名字的格式必须为<code>youname.github.io</code>，例如我的为huangjunhui.github.io<br><img src="http://i2.tietuku.com/85f3fe313abc1402.png" alt=""></p>
<h3 id="部署本地文件到github">部署本地文件到github</h3><p>既然Repository已经创建了，当然是先把博客放到<code>Github</code>上去看看效果。编辑<code>E：\hexo</code>下的<code>_config.yml</code>文件，建议使用Notepad++。<br>在<code>_config.yml</code>最下方，添加如下配置(命令中的第一个huangjunhui为Github的用户名,第二个huangjunhui为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的),如果配置以下命令出现ERROR Deployer not found : github，则参考上文的解决方法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/huangjunhui/huangjunhui.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p>
<p>配置好<code>_config.yml</code>并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，具体方法<a href="http://blog.csdn.net/v123411739/article/details/44071059/" target="_blank" rel="external">史上最全github使用方法：github入门到精通</a>里面有介绍到。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p>
<p>执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。<br>此时，我们的博客已经搭建起来，并发布到Github上了，在浏览器访问<code>huangjunhui.github.io</code>就能看到自己的博客了。第一次访问刚地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。</p>
<h3 id="hexo的配置文件">hexo的配置文件</h3><p>hexo里面有两个常用到的配置文件，分别是整个博客的配置文件<code>E:\hexo\_config.yml</code>和主题的配置文件<code>E:\hexo\themes\lightum\_config.yml</code>，此地址是对于我来说，hexo3.0使用的默认主题是landscape，因此你们的地址应该是<code>E:\hexo\themes\landscape\_config.yml</code>，下文所有讲到lightum的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的lightum，该主题在博客最下方有链接。如果你想自己挑选喜欢的主题，hexo官方提供了12个<a href="http://hexo.io/themes/" target="_blank" rel="external">主题</a>供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到<code>E:\hexo\themes</code>文件夹下，将<code>E&quot;\hexo\_config.yml</code>里的theme名字改为自己下载的主题的文件夹名即可。<br>接下来介绍整个博客的配置文件。<br>E:\hexo_config.yml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site	这下面的几项配置都很简单，你看我的博客就知道分别是什么意思</span></span><br><span class="line">title: Chillax blog	<span class="comment">#博客名</span></span><br><span class="line">subtitle: Goals determine what you are going to be	<span class="comment">#副标题</span></span><br><span class="line">description: Goals determine what you are going to be <span class="comment">#用于搜索，没有直观表现</span></span><br><span class="line">author: huangjunhui	<span class="comment">#作者</span></span><br><span class="line">language: zh-CN	<span class="comment">#语言</span></span><br><span class="line">timezone: 	<span class="comment">#时区，此处不填写，hexo会以你目前电脑的时区为默认值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL	暂不配置，使用默认值</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://yoursite.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory		暂不配置，使用默认值</span></span><br><span class="line"><span class="built_in">source</span>_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing	文章布局等，使用默认值</span></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">filename_<span class="keyword">case</span>: <span class="number">0</span></span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag	暂不配置，使用默认值</span></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format	时间格式，使用默认值</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination	</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: <span class="number">10</span>	<span class="comment">#每页显示的文章数，0表示不分页</span></span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions	插件配置，暂时不配置</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: http://hexo.io/themes/</span></span><br><span class="line">plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">theme: lightum	<span class="comment">#使用的主题</span></span><br><span class="line"></span><br><span class="line">feed:	<span class="comment">#之后配置rss会用，此处先不配置这个</span></span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: <span class="number">20</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment	用于部署到github，之前已经配置过</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"></span><br><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/huangjunhui/huangjunhui.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p>
<p>按照自己的意愿修改完后，执行<code>hexo g</code>，<code>hexo s</code>，打开<code>localhost:4000</code>看看效果。<br><code>E:\hexo\themes\lightum\_config.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">menu:	<span class="comment">#博客右上角的菜单栏，暂时使用默认值</span></span><br><span class="line">  首页: /</span><br><span class="line">  归档: /archives</span><br><span class="line">  关于: /about</span><br><span class="line">  </span><br><span class="line"><span class="comment">#该类对应于E:\hexo\themes\lightum\layout\_widget下的文件</span></span><br><span class="line">widgets:	<span class="comment">#站点右边栏，可以参照我的博客看，暂时使用默认值</span></span><br><span class="line">- intro		<span class="comment">#简介</span></span><br><span class="line">- search		<span class="comment">#搜索</span></span><br><span class="line">- category	<span class="comment">#分类</span></span><br><span class="line">- tagcloud	<span class="comment">#标签云</span></span><br><span class="line">- weibo		<span class="comment">#微博</span></span><br><span class="line">- blogroll	<span class="comment">#友情链接</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">excerpt_link: Read more	<span class="comment">#文章下的Read more，可以改为'阅读全文'</span></span><br><span class="line"></span><br><span class="line">plugins:	<span class="comment">#插件，暂时使用默认值</span></span><br><span class="line"></span><br><span class="line">twitter:	<span class="comment">#twitter</span></span><br><span class="line">  username:</span><br><span class="line">  show_replies: <span class="literal">false</span></span><br><span class="line">  tweet_count: <span class="number">5</span></span><br><span class="line"></span><br><span class="line">addthis:	<span class="comment">#SNS分享，暂时使用默认</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  pubid:</span><br><span class="line">  facebook: <span class="literal">true</span></span><br><span class="line">  twitter: <span class="literal">true</span></span><br><span class="line">  google: <span class="literal">true</span></span><br><span class="line">  pinterest: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">fancybox: <span class="literal">true</span>	<span class="comment">#图片效果，使用默认值</span></span><br><span class="line"></span><br><span class="line">google_analytics: </span><br><span class="line">rss: 	<span class="comment">#生成RSS，暂时使用默认值</span></span><br></pre></td></tr></table></figure></p>
<p>以上的改动不多，大多是介绍下功能。</p>
<h3 id="发表一篇文章">发表一篇文章</h3><p>1.在Git Bash执行命令：<code>$ hexo new &quot;my new post&quot;</code><br>2.在<code>E:\hexo\source\_post</code>中打开my-new-post.md，打开方式使用记事本或notepad++。<br>hexo中写文章使用的是Markdown，没接触过的可以看下<a href="http://wowubuntu.com/markdown/#p" target="_blank" rel="external">Markdown语法说明</a>,<a href="http://lutaf.com/markdown-simple-usage.htm" target="_blank" rel="external">一分钟学会Markdown</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: my new post <span class="comment">#可以改成中文的，如“新文章”</span></span><br><span class="line">date: <span class="number">2015</span>-<span class="number">04</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">56</span>:<span class="number">29</span> <span class="comment">#发表日期，一般不改动</span></span><br><span class="line">categories: blog <span class="comment">#文章文类</span></span><br><span class="line">tags: [博客，文章] <span class="comment">#文章标签，多于一项时用这种格式，只有一项时使用tags: blog</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</span></span><br><span class="line">&lt;!--more--&gt;，在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</span><br></pre></td></tr></table></figure></p>
<p>写完文章后，你可以使用1.<code>$ hexo g</code>生成静态文件。2.<code>$ hexo s</code>在本地预览效果。3.<code>hexo d</code>同步到github，然后使用<a href="http://huangjunhui.github.io" target="_blank" rel="external">http://huangjunhui.github.io</a>进行访问。</p>
<h2 id="总结">总结</h2><p>到现在为止，我们已经搭建起博客，并能写文章了，一个具备基本功能的博客已经实现了。由于本文是博主工作之余写的，比较仓促，难免有错误，欢迎指正。后面的文章将介绍本博客使用到的一些实用的功能，如访问次数，新浪微博秀，RSS，多说评论等，喜欢这些功能的朋友可以继续跟随。</p>
<p>本文非常详细的介绍了搭建过程，但是如果您还是在搭建的过程中碰到了问题，欢迎您在下面留言探讨。亦或是您觉得博主码文辛苦，想评论鼓励，博主也表示欢迎。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="动机">动机</h2><p>前些天，自己刚刚接触hexo，并用hexo搭建了自己的博客，对hexo的强大搭建博客能力感到赞叹。用我的实际体验来说，你只要是有点计算机基础的人，完全可以轻松的使用hexo搭建起自己的博客。你要是用过github、oschina、gitcafe其中的一样，那对你来说，就可以分分钟上手了。其实网上使用hexo搭建博客的教程多的是，我自己也是跟着<a href="http://zipperary.com/">zippera</a>的教程搭建的博客，那么我还写这篇博客是出于什么目的呢？原因如下：第一，网上的教程大多比较老了，我在搭建的过程中就遇到过不少问题，因此我觉得有必要写个适配hexo3.0的教程。第二，如你所见，本博客由于刚刚起步，博文少的可怜，因此写这篇博文也可以充场子，免得太冷清。第三，算是自己的个人笔记吧，我本人对于刚学的东西都喜欢用博文记录，免得以后自己忘掉。<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git常用的基础命令]]></title>
    <link href="http://yoursite.com/2015/04/06/git-basic-commands/"/>
    <id>http://yoursite.com/2015/04/06/git-basic-commands/</id>
    <published>2015-04-06T11:52:45.000Z</published>
    <updated>2015-04-10T16:01:10.465Z</updated>
    <content type="html"><![CDATA[<h2 id="起步">起步</h2><p><strong>用户信息</strong><br>配置你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name “youname”</span><br><span class="line">$ git config --global user.email “<span class="number">12345</span>@example.com”</span><br></pre></td></tr></table></figure></p>
<p>如果用了 —global 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 —global 选项重新配置即可，新的设定保存在当前项目的 .git/config 文件里。<br><a id="more"></a></p>
<h2 id="GIT基础">GIT基础</h2><p><strong>查看配置信息</strong><br>查看已有的配置信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br><span class="line">$ git config <span class="operator">-l</span></span><br></pre></td></tr></table></figure></p>
<p><strong>获取帮助</strong><br>例如想获取config命令的帮助信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">help</span> config </span><br><span class="line">$ git config --help</span><br></pre></td></tr></table></figure></p>
<p><strong>初始化新仓库</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></p>
<p>初始化后，在当前目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。不过目前，仅仅是按照既有的结构框架初始化好了里边所有的文件和目录，但我们还没有开始跟踪管理项目中的任何一个文件。</p>
<p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：<br><strong>跟踪文件：</strong>（将文件加到暂存区域）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>跟踪全部文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure></p>
<p><strong>提交更新</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m “first version”</span><br></pre></td></tr></table></figure></p>
<p><strong>上传（推送）到github</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></p>
<p><strong>从现有仓库克隆</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git://github.com/youname/project.git</span><br><span class="line">$ git <span class="built_in">clone</span> git@github.com:youname/project.git</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/youname/project.git</span><br></pre></td></tr></table></figure></p>
<p><strong>检查当前文件状态</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure></p>
<p><strong>创建.gitignore文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch .gitignore</span><br></pre></td></tr></table></figure></p>
<p><strong>查看修改之后没有暂存起来的内容</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure></p>
<p><strong>移除文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm readme.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>重命名文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mv oldname.txt newname.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>查看提交历史</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure></p>
<p><strong>取消暂存</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD readme.txt</span><br></pre></td></tr></table></figure></p>
<p><strong>添加远程仓库</strong>（远程仓库必须先在github上建好）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add [shortname] [url]</span><br></pre></td></tr></table></figure></p>
<p><strong>实例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:youname/yourRepo.git</span><br></pre></td></tr></table></figure></p>
<p><strong>推送数据到仓库</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [remote-name] [branch-name]</span><br></pre></td></tr></table></figure></p>
<p>如果要把本地的 master 分支推送到origin服务器上（再次说明下，克隆操作会自动使用默认的master 和origin 名字），可以运行下面的命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></p>
<p><strong>从远程仓库抓取数据</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch [remote-name]</span><br></pre></td></tr></table></figure></p>
<p>碰到远端仓库服务器迁移，或者原来的克隆镜像不再使用，又或者某个参与者不再贡献代码，那么需要移除对应的远端仓库<br><strong>远程仓库的删除</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br></pre></td></tr></table></figure></p>
<p><strong>远程仓库重命名</strong>(此处命名的是上文添加远程仓库中的shortname)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rename origin origin2</span><br></pre></td></tr></table></figure></p>
<p><strong>自动补全</strong><br>输入命令后按tab键，就会看到列出所有匹配的可用命令建议：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git co&lt;tab&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="GIT分支">GIT分支</h2><p><strong>创建一个名为“testing”的分支</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch testing</span><br></pre></td></tr></table></figure></p>
<p><strong>切换到“testing”分支</strong>(默认为master分支)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout testing</span><br></pre></td></tr></table></figure></p>
<p><strong>新建并切换到该分支</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b iss53</span><br></pre></td></tr></table></figure></p>
<p>这条命令相当于执行下面这两条命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch iss53</span><br><span class="line">$ git checkout iss53</span><br></pre></td></tr></table></figure></p>
<p><strong>删除hotfix分支</strong>（如果该分支还未被合并则会提示错误，因为这样会丢失数据）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="operator">-d</span> hotfix</span><br></pre></td></tr></table></figure></p>
<p><strong>强制删除hotfix分支</strong>（强制删除，不会提示错误）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D hotfix</span><br></pre></td></tr></table></figure></p>
<p><strong>合并iss53分支</strong>（先切换到master分支）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">$ git merge iss53</span><br></pre></td></tr></table></figure></p>
<p><strong>查看当前所有分支</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure></p>
<p><strong>查看各个分支最后一个提交对象的信息</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -v</span><br></pre></td></tr></table></figure></p>
<p><strong>查看已经与当前分支合并的分支</strong>（已经合并的查出来后可以删掉）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --merge</span><br></pre></td></tr></table></figure></p>
<p><strong>查看未与当前分支合并的分支</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --no-merged</span><br></pre></td></tr></table></figure></p>
<p><strong>同步远程服务器数据到本地</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin</span><br></pre></td></tr></table></figure></p>
<p><strong>从新添加的远程仓库下载数据</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add teamone git://git.team1.ourcompany.com</span><br><span class="line">$ git fetch teamone</span><br></pre></td></tr></table></figure></p>
<p><strong>分化一个新的分支</strong>(使用这个命令会从服务器上下载master最新的版本，所以如果当前本地版本不是最新的，新的分支和本地分支会不同)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b <span class="built_in">test</span>1 origin/master</span><br></pre></td></tr></table></figure></p>
<p>假如你用这个新的分支进行git push，并且通过了合并，那么会在远程仓库建立一个新的同名分支<br>删除该分支的方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin :<span class="built_in">test</span>1</span><br></pre></td></tr></table></figure></p>
<p><strong>分支的衍合：</strong>将test1分支衍合到master主分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout <span class="built_in">test</span>1</span><br><span class="line">$ git rebase master</span><br></pre></td></tr></table></figure></p>
<p>另一种方法，直接衍合，不用再先切换到test1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase master <span class="built_in">test</span>1</span><br></pre></td></tr></table></figure></p>
<p><strong>快进master分支</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">$ git merge client</span><br></pre></td></tr></table></figure></p>
<p>衍合：一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="起步">起步</h2><p><strong>用户信息</strong><br>配置你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name “youname”</span><br><span class="line">$ git config --global user.email “<span class="number">12345</span>@example.com”</span><br></pre></td></tr></table></figure></p>
<p>如果用了 —global 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 —global 选项重新配置即可，新的设定保存在当前项目的 .git/config 文件里。<br>]]>
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开始我的hexo博客]]></title>
    <link href="http://yoursite.com/2015/04/06/start-my-hexo/"/>
    <id>http://yoursite.com/2015/04/06/start-my-hexo/</id>
    <published>2015-04-06T10:52:46.000Z</published>
    <updated>2015-04-11T15:22:45.759Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>早就听说过github这个高大上的东西，也进过github看过，但因自己的英语水平有限，在满是英文的github页面上逗留了一会便关掉页面。<br>一个月前，在家无所事事，偶然机会看到一篇关于建立个人博客的教程，自己虽然在csdn上有一个博客，但是经常看着各种大神高大尚的个人博客，内心不禁来了兴头，决定搞一个个人博客。<br><a id="more"></a></p>
<h2 id="正文">正文</h2><p>因为我看到的建站教程是基于github pages，因此不得不开始了自己的github之旅。有了自己的github后便跟着教程一步步跟着学，期间也搜索过各式各样的github快速入门教程，很快便熟悉了基本的操作。因为教程年代久远，因此肯定有七的八的问题，通过找资料，最终都解决了，但是成品惨不忍睹—太丑了，只能舍弃。之后我还通读了Pro Git的前三章，深化了自己对git的认识，本来打算通读Pro Git，但后来发现只有前三章的内容是常用的，因此便只读了前三章。<br>前几天，看到了自己同学的个人博客，感觉还不错，很是喜欢，便向其索要教程，之后便跟着zippera的教程一步一步走，终于是成功，博客的样子还不错，简洁大方，而hexo提供的本地预览功能也让我爱不释手，写博文使用的markdown也比较容易上手，因此便决定将此站定为自己的个人博客，希望能成为对技术不断学习的动力。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>早就听说过github这个高大上的东西，也进过github看过，但因自己的英语水平有限，在满是英文的github页面上逗留了一会便关掉页面。<br>一个月前，在家无所事事，偶然机会看到一篇关于建立个人博客的教程，自己虽然在csdn上有一个博客，但是经常看着各种大神高大尚的个人博客，内心不禁来了兴头，决定搞一个个人博客。<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
  </entry>
  
</feed>